var pages = [{'name': 'open class DelegatingCommand(default: CommandExecutor, children: Map<String, CommandExecutor>) : CommandExecutor', 'description':'com.github.johnnyjayjay.spiglin.DelegatingCommand', 'location':'spiglin/com.github.johnnyjayjay.spiglin/-delegating-command/index.html', 'searchKey':'DelegatingCommand'},
{'name': 'fun DelegatingCommand(default: CommandExecutor, children: Map<String, CommandExecutor>)', 'description':'com.github.johnnyjayjay.spiglin.DelegatingCommand.DelegatingCommand', 'location':'spiglin/com.github.johnnyjayjay.spiglin/-delegating-command/-delegating-command.html', 'searchKey':'DelegatingCommand'},
{'name': 'open override fun onCommand(sender: CommandSender, command: Command, label: String, args: Array<String>): Boolean', 'description':'com.github.johnnyjayjay.spiglin.DelegatingCommand.onCommand', 'location':'spiglin/com.github.johnnyjayjay.spiglin/-delegating-command/on-command.html', 'searchKey':'onCommand'},
{'name': 'object PluginManager : PluginManager', 'description':'com.github.johnnyjayjay.spiglin.PluginManager', 'location':'spiglin/com.github.johnnyjayjay.spiglin/-plugin-manager/index.html', 'searchKey':'PluginManager'},
{'name': 'object Server : Server', 'description':'com.github.johnnyjayjay.spiglin.Server', 'location':'spiglin/com.github.johnnyjayjay.spiglin/-server/index.html', 'searchKey':'Server'},
{'name': 'fun broadcast(message: String): Int', 'description':'com.github.johnnyjayjay.spiglin.broadcast', 'location':'spiglin/com.github.johnnyjayjay.spiglin/broadcast.html', 'searchKey':'broadcast'},
{'name': 'operator fun Vector.compareTo(other: Vector): Int', 'description':'com.github.johnnyjayjay.spiglin.compareTo', 'location':'spiglin/com.github.johnnyjayjay.spiglin/compare-to.html', 'searchKey':'compareTo'},
{'name': 'fun effect(type: PotionEffectType, duration: Int, amplifier: Int, ambient: Boolean, particles: Boolean, icon: Boolean): PotionEffect', 'description':'com.github.johnnyjayjay.spiglin.effect', 'location':'spiglin/com.github.johnnyjayjay.spiglin/effect.html', 'searchKey':'effect'},
{'name': 'interface ExtendedListener<in T : Event> : Listener', 'description':'com.github.johnnyjayjay.spiglin.event.ExtendedListener', 'location':'spiglin/com.github.johnnyjayjay.spiglin.event/-extended-listener/index.html', 'searchKey':'ExtendedListener'},
{'name': 'abstract fun onEvent(event: T)', 'description':'com.github.johnnyjayjay.spiglin.event.ExtendedListener.onEvent', 'location':'spiglin/com.github.johnnyjayjay.spiglin.event/-extended-listener/on-event.html', 'searchKey':'onEvent'},
{'name': 'inline fun <T : Event> Plugin.expect(amount: Int, crossinline predicate: (T) -> Boolean, timeout: Long, timeoutUnit: TimeUnit, crossinline timeoutAction: () -> Unit, crossinline action: (T) -> Unit): ExtendedListener<T>', 'description':'com.github.johnnyjayjay.spiglin.event.expect', 'location':'spiglin/com.github.johnnyjayjay.spiglin.event/expect.html', 'searchKey':'expect'},
{'name': 'inline fun <T : Event> Plugin.hear(priority: EventPriority, ignoreCancelled: Boolean, crossinline action: Listener.(T) -> Unit): ExtendedListener<T>', 'description':'com.github.johnnyjayjay.spiglin.event.hear', 'location':'spiglin/com.github.johnnyjayjay.spiglin.event/hear.html', 'searchKey':'hear'},
{'name': 'inline fun <T : Event> listener(crossinline action: Listener.(T) -> Unit): ExtendedListener<T>', 'description':'com.github.johnnyjayjay.spiglin.event.listener', 'location':'spiglin/com.github.johnnyjayjay.spiglin.event/listener.html', 'searchKey':'listener'},
{'name': 'inline fun <T : Event> Any.on(plugin: Plugin, priority: EventPriority, ignoreCancelled: Boolean, crossinline action: Listener.(T) -> Unit): ExtendedListener<T>', 'description':'com.github.johnnyjayjay.spiglin.event.on', 'location':'spiglin/com.github.johnnyjayjay.spiglin.event/on.html', 'searchKey':'on'},
{'name': 'fun Listener.unregister()', 'description':'com.github.johnnyjayjay.spiglin.event.unregister', 'location':'spiglin/com.github.johnnyjayjay.spiglin.event/unregister.html', 'searchKey':'unregister'},
{'name': 'fun Player.feed()', 'description':'com.github.johnnyjayjay.spiglin.feed', 'location':'spiglin/com.github.johnnyjayjay.spiglin/feed.html', 'searchKey':'feed'},
{'name': 'fun Damageable.heal()', 'description':'com.github.johnnyjayjay.spiglin.heal', 'location':'spiglin/com.github.johnnyjayjay.spiglin/heal.html', 'searchKey':'heal'},
{'name': 'fun Player.hideFromAll()', 'description':'com.github.johnnyjayjay.spiglin.hideFromAll', 'location':'spiglin/com.github.johnnyjayjay.spiglin/hide-from-all.html', 'searchKey':'hideFromAll'},
{'name': 'fun Player.hideIf(predicate: (Player) -> Boolean, plugin: Plugin?)', 'description':'com.github.johnnyjayjay.spiglin.hideIf', 'location':'spiglin/com.github.johnnyjayjay.spiglin/hide-if.html', 'searchKey':'hideIf'},
{'name': 'fun Inventory.borders(padding: Int): Iterable<Int>', 'description':'com.github.johnnyjayjay.spiglin.inventory.borders', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/borders.html', 'searchKey':'borders'},
{'name': 'fun Inventory.column(index: Int): IntProgression', 'description':'com.github.johnnyjayjay.spiglin.inventory.column', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/column.html', 'searchKey':'column'},
{'name': 'inline fun Inventory.forEachSlot(action: (Int, Int) -> Unit)', 'description':'com.github.johnnyjayjay.spiglin.inventory.forEachSlot', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/for-each-slot.html', 'searchKey':'forEachSlot'},
{'name': 'inline fun Inventory.forEachSlotLinear(action: (Int) -> Unit)', 'description':'com.github.johnnyjayjay.spiglin.inventory.forEachSlotLinear', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/for-each-slot-linear.html', 'searchKey':'forEachSlotLinear'},
{'name': 'inline fun inventory(rows: Int, owner: InventoryHolder?, title: String, body: Inventory.() -> Unit): Inventory', 'description':'com.github.johnnyjayjay.spiglin.inventory.inventory', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/inventory.html', 'searchKey':'inventory'},
{'name': 'fun items(formatString: String, bindings: Map<Char, ItemStack?>): Array<ItemStack?>', 'description':'com.github.johnnyjayjay.spiglin.inventory.items', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/items.html', 'searchKey':'items'},
{'name': 'fun Inventory.openTo(player: Player): InventoryView?', 'description':'com.github.johnnyjayjay.spiglin.inventory.openTo', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/open-to.html', 'searchKey':'openTo'},
{'name': 'fun Inventory.row(index: Int): IntRange', 'description':'com.github.johnnyjayjay.spiglin.inventory.row', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/row.html', 'searchKey':'row'},
{'name': 'fun slots(vararg slots: Array<out Slot>): Iterable<Int>', 'description':'com.github.johnnyjayjay.spiglin.inventory.slots', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/slots.html', 'searchKey':'slots'},
{'name': 'fun Int.toSlot(): Slot', 'description':'com.github.johnnyjayjay.spiglin.inventory.toSlot', 'location':'spiglin/com.github.johnnyjayjay.spiglin.inventory/to-slot.html', 'searchKey':'toSlot'},
{'name': 'class Attributes', 'description':'com.github.johnnyjayjay.spiglin.item.Attributes', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-attributes/index.html', 'searchKey':'Attributes'},
{'name': 'fun Attributes()', 'description':'com.github.johnnyjayjay.spiglin.item.Attributes.Attributes', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-attributes/-attributes.html', 'searchKey':'Attributes'},
{'name': 'inner class ModifierNode', 'description':'com.github.johnnyjayjay.spiglin.item.Attributes.ModifierNode', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-attributes/-modifier-node/index.html', 'searchKey':'ModifierNode'},
{'name': 'fun modify(attribute: Attribute): Attributes.ModifierNode', 'description':'com.github.johnnyjayjay.spiglin.item.Attributes.modify', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-attributes/modify.html', 'searchKey':'modify'},
{'name': 'data class EnchantmentContainer', 'description':'com.github.johnnyjayjay.spiglin.item.EnchantmentContainer', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-enchantment-container/index.html', 'searchKey':'EnchantmentContainer'},
{'name': 'operator fun component1(): Enchantment', 'description':'com.github.johnnyjayjay.spiglin.item.EnchantmentContainer.component1', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-enchantment-container/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component2(): Int', 'description':'com.github.johnnyjayjay.spiglin.item.EnchantmentContainer.component2', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-enchantment-container/component2.html', 'searchKey':'component2'},
{'name': 'fun copy(enchantment: Enchantment, level: Int): EnchantmentContainer', 'description':'com.github.johnnyjayjay.spiglin.item.EnchantmentContainer.copy', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-enchantment-container/copy.html', 'searchKey':'copy'},
{'name': 'infix fun level(level: Int)', 'description':'com.github.johnnyjayjay.spiglin.item.EnchantmentContainer.level', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-enchantment-container/level.html', 'searchKey':'level'},
{'name': 'class EnchantmentNode', 'description':'com.github.johnnyjayjay.spiglin.item.EnchantmentNode', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-enchantment-node/index.html', 'searchKey':'EnchantmentNode'},
{'name': 'fun EnchantmentNode()', 'description':'com.github.johnnyjayjay.spiglin.item.EnchantmentNode.EnchantmentNode', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/-enchantment-node/-enchantment-node.html', 'searchKey':'EnchantmentNode'},
{'name': 'inline fun ItemMeta.attributes(body: Attributes.() -> Unit)', 'description':'com.github.johnnyjayjay.spiglin.item.attributes', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/attributes.html', 'searchKey':'attributes'},
{'name': 'fun ItemMeta.flag(flag: ItemFlag)', 'description':'com.github.johnnyjayjay.spiglin.item.flag', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/flag.html', 'searchKey':'flag'},
{'name': 'fun ItemMeta.flags(vararg flags: Array<out ItemFlag>)', 'description':'com.github.johnnyjayjay.spiglin.item.flags', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/flags.html', 'searchKey':'flags'},
{'name': 'inline fun <T : ItemMeta> itemMeta(material: Material, body: T.() -> Unit): T', 'description':'com.github.johnnyjayjay.spiglin.item.itemMeta', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/item-meta.html', 'searchKey':'itemMeta'},
{'name': 'inline fun <T : ItemMeta> ItemStack.meta(body: T.() -> Unit)', 'description':'com.github.johnnyjayjay.spiglin.item.meta', 'location':'spiglin/com.github.johnnyjayjay.spiglin.item/meta.html', 'searchKey':'meta'},
{'name': 'fun Damageable.kill()', 'description':'com.github.johnnyjayjay.spiglin.kill', 'location':'spiglin/com.github.johnnyjayjay.spiglin/kill.html', 'searchKey':'kill'},
{'name': 'fun Plugin.delay(ticks: Long, async: Boolean, task: BukkitRunnable.() -> Unit): BukkitTask', 'description':'com.github.johnnyjayjay.spiglin.scheduler.delay', 'location':'spiglin/com.github.johnnyjayjay.spiglin.scheduler/delay.html', 'searchKey':'delay'},
{'name': 'inline fun Plugin.repeat(progression: IntProgression, delay: Long, period: Long, async: Boolean, crossinline task: BukkitRunnable.(Int) -> Unit): BukkitTask', 'description':'com.github.johnnyjayjay.spiglin.scheduler.repeat', 'location':'spiglin/com.github.johnnyjayjay.spiglin.scheduler/repeat.html', 'searchKey':'repeat'},
{'name': 'fun Plugin.run(async: Boolean, task: BukkitRunnable.() -> Unit): BukkitTask', 'description':'com.github.johnnyjayjay.spiglin.scheduler.run', 'location':'spiglin/com.github.johnnyjayjay.spiglin.scheduler/run.html', 'searchKey':'run'},
{'name': 'fun Plugin.schedule(delay: Long, period: Long, async: Boolean, task: BukkitRunnable.() -> Unit): BukkitTask', 'description':'com.github.johnnyjayjay.spiglin.scheduler.schedule', 'location':'spiglin/com.github.johnnyjayjay.spiglin.scheduler/schedule.html', 'searchKey':'schedule'},
{'name': 'fun Player.showIf(predicate: (Player) -> Boolean, plugin: Plugin?)', 'description':'com.github.johnnyjayjay.spiglin.showIf', 'location':'spiglin/com.github.johnnyjayjay.spiglin/show-if.html', 'searchKey':'showIf'},
{'name': 'fun Player.showToAll()', 'description':'com.github.johnnyjayjay.spiglin.showToAll', 'location':'spiglin/com.github.johnnyjayjay.spiglin/show-to-all.html', 'searchKey':'showToAll'},
{'name': 'operator fun Vector.timesAssign(scalar: Number)', 'description':'com.github.johnnyjayjay.spiglin.timesAssign', 'location':'spiglin/com.github.johnnyjayjay.spiglin/times-assign.html', 'searchKey':'timesAssign'},
{'name': 'operator fun Vector.unaryMinus(): Vector', 'description':'com.github.johnnyjayjay.spiglin.unaryMinus', 'location':'spiglin/com.github.johnnyjayjay.spiglin/unary-minus.html', 'searchKey':'unaryMinus'},
{'name': 'operator fun Vector.unaryPlus(): Vector', 'description':'com.github.johnnyjayjay.spiglin.unaryPlus', 'location':'spiglin/com.github.johnnyjayjay.spiglin/unary-plus.html', 'searchKey':'unaryPlus'},
{'name': 'infix fun Vector.x(vector: Vector): Vector', 'description':'com.github.johnnyjayjay.spiglin.x', 'location':'spiglin/com.github.johnnyjayjay.spiglin/x.html', 'searchKey':'x'}]
